% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotD3mirt.R
\name{plotD3mirt}
\alias{plotD3mirt}
\title{Graphical Output for D3mirt}
\usage{
plotD3mirt(
  x,
  scale = FALSE,
  hide = FALSE,
  diff.level = NULL,
  items = NULL,
  item.names = TRUE,
  item.lab = NULL,
  constructs = FALSE,
  construct.lab = NULL,
  adjust.lab = c(0.5, -0.8),
  x.lab = "X",
  y.lab = "Y",
  z.lab = "Z",
  title = "",
  line = -5,
  axis.scalar = c(1.1, 1.1, 1.1),
  axis.col = "black",
  axis.points = "black",
  points = TRUE,
  axis.ticks = TRUE,
  nticks = c(4, 4, 4),
  width.rgl.x = 1040,
  width.rgl.y = 1040,
  view = c(15, 20, 0.7),
  show.plane = TRUE,
  plane.color = "grey80",
  background = "white",
  type = "rotation",
  col = c("black", "grey20", "grey40", "grey60", "grey80"),
  arrow.width = 0.6,
  n = 20,
  theta = 0.2,
  barblen = 0.03,
  c.scalars = c(1, 1),
  c.type = "rotation",
  c.col = "black",
  c.arrow.width = 0.6,
  c.n = 20,
  c.theta = 0.2,
  c.barblen = 0.03,
  profiles = NULL,
  lev = NULL,
  sphere.col = c("black", "grey20", "grey40", "grey60", "grey80"),
  spheres.r = 0.05,
  ellipse = TRUE,
  CI.level = 0.95,
  ellipse.col = "grey80",
  ellipse.alpha = 0.2,
  ...
)
}
\arguments{
\item{x}{S3 object of class \code{D3mirt}.}

\item{scale}{Logical, if item vector arrow length should visualize the MDISC estimates. If set to FALSE, the vector arrow length will be one unit length. Default is \code{scale = FALSE}.}

\item{hide}{Logical, if items should be plotted. Default is \code{hide = FALSE}.}

\item{diff.level}{Optional. Plotting of a single level of difficulty indicated by an integer.}

\item{items}{Optional. The user can input a list of integers indicating what item vector arrows will be visible while the remaining items are hidden.}

\item{item.names}{Logical, if item labels should be plotted. Default is \code{item.names = TRUE}.}

\item{item.lab}{Optional. String vector of item names that will override row names extracted from the data frame.}

\item{constructs}{Logical, if construct vector arrows should be plotted. Default set to FALSE}

\item{construct.lab}{Optional. String vector of names for constructs.}

\item{adjust.lab}{Vector of parameters for the position of item and construct labels for the \code{text3d} function. The first value is for horizontal adjustment and the second is for vertical adjustment. Default is \code{adjust.lab = c(0.5, -0.8)}.}

\item{x.lab}{Labels for x-axis, Default is \code{x.lab = "X"}.}

\item{y.lab}{Labels for y-axis, Default is \code{y.lab = "Y"}.}

\item{z.lab}{Labels for y-axis, Default is \code{z.lab = "Z"}.}

\item{title}{The main title for the graphical device, plotted with the \code{title3d()} function.}

\item{line}{Title placement for \code{title3d()}. Default is \code{line = -5}.}

\item{axis.scalar}{Scalar factors to adjusts the length of the axes (x, y, z) in the 3D model. Default is \code{axis.scalar = c(1.1,1.1,1.1)}}

\item{axis.col}{Color of axis for the \code{segment3D()}function, default is \code{axis.col = "Black"}.}

\item{axis.points}{Color of axis points for the \code{points3d()} function. Default is \code{axis.points = "black"}.}

\item{points}{Logical, if axis from \code{points3d()} have end points. Default is \code{points = TRUE}.}

\item{axis.ticks}{Logical, if axis ticks from the \code{axis3d()} function should be plotted. Default is `axis.ticks = TRUE'.}

\item{nticks}{Number of ticks for \code{axis3d()} indicated with integers for the x, y, and z axes. Default is \code{nticks = c(10,10,10)}.}

\item{width.rgl.x}{Width in the x direction for \code{par3d()}. Default is \code{width.rgl.x = 1040}.}

\item{width.rgl.y}{Width in the y direction for \code{par3d()}. Default is \code{width.rgl.y = 1040}.}

\item{view}{Vector with polar coordinates and zoom factor for the \code{view3d} function. Default is \code{view = c(15,20, 0.7)}.}

\item{show.plane}{Logical, if xz-plane should be visible in the graphical device. Default is \code{show.plane = TRUE}.}

\item{plane.color}{Color of the plane, default is \code{plane.color = "grey80"}.}

\item{background}{Set background color for the graphical device, Default is \code{background = "white"}.}

\item{type}{Type of vector arrow for items, default is \code{type = "rotation"}. See \link[rgl:arrow3d]{rgl::arrow3d} for more options regarding arrow types.}

\item{col}{Vector of colors representing difficulty levels for item response functions used in \code{arrow3d()}. Default is \code{col = c("black", "grey20", "grey40", "grey60", "grey80")}.}

\item{arrow.width}{Width of vector arrows for \code{arrow3d()}. Default is \code{arrow.width = 0.6}.}

\item{n}{Number of barbs for the vector arrows from \code{arrow3d()}. Default is \code{n = 20}.}

\item{theta}{Opening angle of barbs for vector arrows from \code{arrow3d()}. Default is \code{theta = 0.2}.}

\item{barblen}{The length of the barbs for vector arrows from \code{arrow3d()}. Default is \code{barblen = 0.03}.}

\item{c.scalars}{Set of scalars for adjusting construct arrow length. The first numeric adjust the length in the negative direction and the second numeric the length in the positive direction. Default is \code{c.scalars = c(1,1)}.}

\item{c.type}{Type of vector arrow for constructs. See \link[rgl:arrow3d]{rgl::arrow3d} for more options regarding arrow types. Default is \code{c.type = "rotation"}.}

\item{c.col}{Color for construct vector arrows from \code{arrow3d()}, default is \code{c.col = "black"}.}

\item{c.arrow.width}{Width of construct vector arrows for \code{arrow3d()}. Default is \code{c.arrow.width = 0.6}.}

\item{c.n}{Number of barbs for the construct vector arrows from the \code{arrow3d()} function. Default is \code{c.n = 20}.}

\item{c.theta}{Opening angle of barbs for construct vector arrows from \code{arrow3d()}. Default is \code{c.theta = 0.2}.}

\item{c.barblen}{The length of the barbs for construct vector arrows from \code{arrow3d()}. Default is \code{c.barblen = 0.03}.}

\item{profiles}{Data frame with coordinates for spheres representing respondent scores. Default is \code{profiles = NULL}.}

\item{lev}{Optional. Column with values indicating levels for sphere colors from the \code{sphere.col} vector. Default is \code{lev = NULL}.}

\item{sphere.col}{Color vector for \code{spheres3d()}. Default is \code{sphere.col = c("black", "grey20", "grey40", "grey60", "grey80")}.}

\item{spheres.r}{Radius of the spheres for \code{spheres3d()}. Default is \code{spheres.r = 0.05}.}

\item{ellipse}{Logical, if spheres should include an ellipsoid outlining a confidence region returned from the \code{ellipse3d()} function. Default is \code{ellipse = TRUE}.}

\item{CI.level}{Level of confidence for \code{ellipse3d()}, default is \code{CI.level = 0.95}.}

\item{ellipse.col}{Color of the ellipse from \code{ellipse3d()}. Default is \code{ellipse.col = "grey80"}.}

\item{ellipse.alpha}{Opacity for the confidence region from \code{ellipse3d()}. Default is \code{ellipse.alpha = 0.20}.}

\item{...}{Additional arguments to be passed to RGL or methods.}
}
\value{
A RGL graphical device.
}
\description{
For graphing of objects of class \code{D3mirt} from the \code{\link[=D3mirt]{D3mirt()}} function.
}
\details{
The function is based on the \link{rgl} package for visualization with OpenGL. outputs a three-dimensional interactive RGL device containing the descriptive multidimensional item response theory model with orthogonal standardized axes centered at 0.
The RGL device can be exported as an interactive html file or as a still shoot (see examples below).
In the case of the latter, the model perspective in the still shoot can be adjusted by changing the \code{view} argument for the function.
}
\section{Plotting options}{
The function allows plotting of all items, a selection of items as well as plotting a single item (see examples section).
Items can also be plotted with unit length by setting \code{scale = TRUE}.
In addition, the user also has the option of adding constructs to the graphical output with \code{constructs = TRUE} (see the documentation for \link{D3mirt} regarding constructs).
Plotting can be limited to showing one level of difficulty with the \code{diff.level} argument at a time if multiple levels of difficulty are used in the model.
Item names are displayed by default, but the user has the option of imputing new names for the items (with \code{item.lab}) and adding names for the constructs (with \code{construct.lab}).
}

\section{Visual Profile Analysis}{
In addition, the plot function can also display respondent scores in the model space, represented as spheres located with the help of factors scores as coordinates in the model.
This allows for a type of profile analysis of respondent groups in which respondents' are selected and displayed based on some external criteria (see examples section below).
This is done by first extracting respondent factor scores with \link[mirt:fscores]{mirt::fscores}(Chalmers, 2012) and then inducing some selection process that subset respondent rows.
The resulting data frame is then imputed in the \code{profiles} argument.

The user also has the option of imputing a grouping variable in the \code{lev} argument for the profile data that allows for varying the coloring of spheres based on a group variable indicator.
The most easy way to achieve this is to use a single Likert-item as the selection criteria.
More specifically, if respondent factor scores from the \code{fscores}function are combined column wise with respondents Likert scores on the criteria item, then \code{plotD3mirt()} use the \code{as.factor()}function to coerce the different Likert score options to be factor variables.
These factor variables indicate what color to use from the \code{sphere.col} argument, e.g., respondents who gave a response of 1 on the likert item will be colored by the first color in the color vector, respondents ho gave a response of 2 will be colored by the second color, and so on.
If the there are more factors than there are different colors contained in the \code{sphere.col} vector, then the user most add more color alternatives to the color vector.
See examples section for more options on how to perform prfile analysis.
A general advice is also to hiding vector arrows with \code{hide = TRUE} when analyzing respondent profiles to avoid visual cluttering.
}

\section{Guidelines for the Graphical Output}{
In general, vector arrows represent item response functions and the location, angle, and length of the arrows indicate item characteristics (Reckase, 2009).
If polytomous items, such as Likert items, are used then each an item will have multiple item response functions that run successively long the same line.

The distance of the lower end of the vector arrows away from the origin indicates the an items multidimensional difficulty (MDIFF).
For Likert items that hold multiple item response functions, the MDIFF can, therefore, be said to show the multidimensional range of difficulty for an item.

The length of the arrow indicates the item's level of multidimensional discrimination (MDISC).
Longer arrows indicates high discrimination and shorter arrows indicates lower discrimination.

The angle of the vector arrows, seen from the model axes, indicates the direction of maximal slope of discrimination for the particular item response function.
In turn, this also indicates what singular traits, located along the orthogonal axes, an item can be said to describe.
For instance, an item located at 0° seen from x-axis, and 90° as seen from the y and z-axis, only describes trait x.
Such an item is unidimensional because its direction vector of maximal discrimination slope lies parallel and on the x-axis.
In contrast, an item located at 45° between all three axes in a three-dimensional model describes all three traits in the model equally well.
Such an item is within-multidimensional because its direction vector lies parallel and on the 45° degree line.
}

\section{Model Violations}{
Since descriptive multidimensional item response theory is based on the multidimensional version of the graded response model (Samejima, 1969), all items must adequately meet the necessary statistical assumptions of this type of model.
In other words, this implies that violations of the multidimensional graded response model can be observed visually in the \code{plotD3mirt()} graphical device.
For instance, shorter vector arrows indicate weaker discrimination on level of ability.
Moreover, if an item struggles or fail to describe any of the latent variables in the model it can be observed as an extreme stretch of the MDIFF range.
This is comparable to observing horizontal trace lines in a unidimensional item response theory model turn horizontal.
}

\examples{
\dontrun{
# Create S3 object of class D3mirt
g <- D3mirt(x)

# Create nested lists for constructs
c <- list(list(1,3,4,6,8), list(2,5,7,9,10))
g <- D3mirt(d, c)

# Plot RGL device
plotD3mirt(g)

# Plot RGL device on one level of difficulty
plotD3mirt(g, diff.level = 5)

# Plot RGL device with constructs visible and scaled items
plotD3mirt(g, scale = TRUE, constructs = TRUE)

# Plot a selection of items from the model with named constructs
plotD3mirt(g, constructs = TRUE, items = c(1,3,4,6,8), construct.lab = c("I_1", "I_2"))

# Profile analysis
# Extract respondent factor scores from mod1 with `fscores()` function from [mirt::mirt]
library(mirt)
f <- data.frame(fscores(mod.32, method="EAP", full.scores = TRUE, full.scores.SE = F, QMC = T))

# Attach f to column 10 from data frame x containing empirical scores
# Column bind fscores output first
y <- data.frame(cbind(f, x[,10]))

# Subset data frame y conditioned on values < 2 in column 4
z <- subset(y, y[,4] < 2)

# Subset data frame y conditioned on values >= 2 and <= 4 in column 4
z <- subset(y, y[,4] >= 2 & y[,4] <= 4)

# Call plotD3mirt with profiles, hidden items
# And 3 levels of sphere coloring ("black" = 1 to "grey60" = 3)
plotD3mirt(g, hide = TRUE, profiles = z, lev = z[,4], lev.color = c("black", "grey40", "grey60"))

# Same example but with lowest score highlighted with red
plotD3mirt(g, hide = TRUE, profiles = z, lev = z[,4], lev.color = c("red", "grey40", "grey60"))

# The use of `rep()`makes it possible to create groups by number of colors in color vector
# Can be useful on variables with a high amount of indicator levels
# Subset data frame y conditioned on age <= 30 in column 10
z <- subset(y, y[,4] >= 2 & y[,4] <= 30)

# Check number of factor levles with `nlevels()`
nlevels(as.factor(z[,4]))

# Repetition of colors can be used to create color groups based on the `factor()` output
# Assume we want to divide 20 factors in the age variable into 4 color groups
# Ordered from young to old
z <- z[order(z[,4]), decreasing = FALSE]

# Create color vector with 4 color groups, youngest will be colored red
colvec <- c(rep("red", 5), rep("orange", 5), rep("violet", 5), rep("cyan", 5))

# Call plotD3mirt with profiles on age and with hidden items
plotD3mirt(g, hide = TRUE, profiles = z, lev = z[,4], lev.color = colvec)

# Export RGL device to consol
plotD3mirt(g, constructs = TRUE)
rglwidget(width = 1040, height = 1040)

# Export RGL device to file
plotD3mirt(g, constructs = TRUE)
rgl.snapshot('RGLdevice.png', fmt = 'png')
}
}
\references{
Chalmers, R., P. (2012). mirt: A Multidimensional Item Response Theory Package for the R Environment. \emph{Journal of Statistical Software, 48}(6), 1-29.

Reckase, M. D. (2009). \emph{Multidimensional Item Response Theory}. Springer.

Samejima, F. (1969). Estimation of latent ability using a response pattern of graded scores. \emph{Psychometrika 34}, 1–97. https://doi.org/10.1007/BF03372160
}
\author{
Erik Forsberg
}
